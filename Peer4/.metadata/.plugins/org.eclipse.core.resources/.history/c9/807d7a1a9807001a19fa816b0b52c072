import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;

public class Upload implements Runnable {

	ServerSocket server;
	Socket socket;
	InetSocketAddress peerAddress;
	BufferedReader dis;
	DataOutputStream dos;
	FileInputStream fis;
	File file;
	OutputStream os;
	int port;
	String filename;
	String fileInfo;
	int tradeNum;
	int remain;
	int bitmapLength;
	int[] bitmap;

	long totalReadBytes = 0;
	byte[] buffer;
	int readBytes;
	int bitmapIndex;
	int position;

	public Upload() {
		try {
			port = Client.myPort;
			server = new ServerSocket(port);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void run() {
		try {
			while (true) {
				socket = server.accept();
				peerAddress = (InetSocketAddress)socket.getRemoteSocketAddress();
				
				System.out.println("A peer(" + peerAddress.getAddress().getHostAddress() + ") is connected. (Port: "
						+ peerAddress.getPort() + ")");
				
				dis = new BufferedReader(new InputStreamReader(socket.getInputStream()));
				dos = new DataOutputStream(socket.getOutputStream());
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
